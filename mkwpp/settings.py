"""
Django settings for mkwpp project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


def int_or_default(value: str, default: int):
    try:
        return int(value)
    except (ValueError, TypeError):
        return default


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(int_or_default(os.environ.get('DJANGO_DEBUG'), 0))

ALLOWED_HOSTS = os.environ.get('DJANGO_ALLOWED_HOSTS', '').split(' ')

FRONTEND_URL = os.environ.get('DJANGO_FRONTEND_URL', 'http://localhost:3000')


# Application definition

INSTALLED_APPS = [
    'mkwpp.admin.MKWPPAdminConfig',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'knox',
    'tinymce',
    'multiselectfield',
    'django_celery_beat',
    'django_celery_results',
    'core',
    'timetrials',
    'drf_spectacular',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mkwpp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mkwpp.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('POSTGRES_NAME'),
        'USER': os.environ.get('POSTGRES_USER'),
        'PASSWORD': os.environ.get('POSTGRES_PASSWORD'),
        'HOST': os.environ.get('POSTGRES_HOST'),
        'PORT': int_or_default(os.environ.get('POSTGRES_PORT'), 0),
        'CONN_MAX_AGE': int_or_default(os.environ.get('DJANGO_DB_CONN_MAX_AGE', ''), 0),
        'CONN_HEALTH_CHECKS': os.environ.get('DJANGO_DB_CONN_HEALTH_CHECKS', '') == 'true',
    }
}


# Cache
# https://docs.djangoproject.com/en/5.1/ref/settings/#caches

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.redis.RedisCache',
        'LOCATION': 'redis://cache:6379',
    }
}


# Authentication
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth

AUTH_USER_MODEL = 'core.User'


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Django REST framework
# https://www.django-rest-framework.org/api-guide/settings/

REST_FRAMEWORK = {
  'DEFAULT_AUTHENTICATION_CLASSES': [],
  'DEFAULT_PARSER_CLASSES': [
    'rest_framework.parsers.JSONParser',
  ],
  'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
}


# HTTPS
# https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/#https

# SECURE_HSTS_SECONDS = int_or_default(os.environ.get('DJANGO_HSTS_SECONDS', ''), 0)
# SECURE_HSTS_INCLUDE_SUBDOMAINS = SECURE_HSTS_SECONDS != 0
# SECURE_HSTS_PRELOAD = SECURE_HSTS_SECONDS != 0

# SECURE_SSL_REDIRECT = os.environ.get('DJANGO_HTTPS', '').lower() == 'true'
# SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https') if SECURE_SSL_REDIRECT else None
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

CSRF_COOKIE_SECURE = os.environ.get('DJANGO_HTTPS', '').lower() == 'true'
SESSION_COOKIE_SECURE = os.environ.get('DJANGO_HTTPS', '').lower() == 'true'

CSRF_TRUSTED_ORIGINS = os.environ.get('DJANGO_CSRF_TRUSTED_ORIGINS', '').split(' ')


# CORS
# https://github.com/adamchainz/django-cors-headers#configuration

CORS_ALLOW_ALL_ORIGINS = True


# DRF-spectacular
# https://drf-spectacular.readthedocs.io/en/latest/settings.html

SPECTACULAR_SETTINGS = {
    'TITLE': "Mario Kart Wii Players' Page API",
    'DESCRIPTION': "The brains of the Mario Kart Wii Players' Page.",
    'VERSION': '0.1.0',
    'SERVE_INCLUDE_SCHEMA': False,
    'ENUM_NAME_OVERRIDES': {
      'RegionTypeEnum': 'timetrials.models.regions.RegionTypeChoices',
      'CategoryEnum': 'timetrials.models.categories.CategoryChoices',
    },
}


# Email
# https://docs.djangoproject.com/en/5.1/ref/settings/#email

EMAIL_HOST = 'smtp'
EMAIL_PORT = 25
DEFAULT_FROM_EMAIL = "noreply@mariokart64.com"


# Celery
# https://docs.celeryq.dev/en/latest/userguide/configuration.html#configuration

CELERY_RESULT_BACKEND = 'django-db'
CELERY_BROKER_URL = os.environ.get('REDIS_URL', 'redis://cache:6379')


# TinyMCE
# https://django-tinymce.readthedocs.io/en/stable/installation.html#configuration

TINYMCE_DEFAULT_CONFIG = {
    'theme': 'silver',
    'skin': 'oxide-dark',
    'height': 500,
    'menubar': False,
    'plugins':
        'anchor,autolink,charmap,code,emoticons,help,lists,link,searchreplace,table,wordcount,',
    'toolbar': [
        'undo redo | blocks | alignleft aligncenter alignright alignjustify | bullist numlist '
        'outdent indent | help',
        'removeformat | bold italic underline strikethrough | forecolor backcolor | link anchor '
        'table | charmap emoticons | code',
    ],
}


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_ROOT = BASE_DIR / 'staticfiles'

STATIC_URL = '/static/'


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
