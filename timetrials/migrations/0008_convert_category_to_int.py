# Generated by Django 5.1.1 on 2024-10-26 13:38

import multiselectfield.db.fields
from django.db import migrations, models


def convert_categories_to_int(apps, schema_editor):
    PlayerStats = apps.get_model('timetrials', 'PlayerStats')
    Score = apps.get_model('timetrials', 'Score')
    Standard = apps.get_model('timetrials', 'Standard')
    Track = apps.get_model('timetrials', 'Track')
    db_alias = schema_editor.connection.alias
    PlayerStats.objects.using(db_alias).all().update(
        category_tmp=models.Case(
            models.When(category=models.Value('nonsc'), then=models.Value(0)),
            models.When(category=models.Value('sc'), then=models.Value(1)),
            models.When(category=models.Value('unres'), then=models.Value(2)),
        )
    )
    Score.objects.using(db_alias).all().update(
        category_tmp=models.Case(
            models.When(category=models.Value('nonsc'), then=models.Value(0)),
            models.When(category=models.Value('sc'), then=models.Value(1)),
            models.When(category=models.Value('unres'), then=models.Value(2)),
        )
    )
    Standard.objects.using(db_alias).all().update(
        category_tmp=models.Case(
            models.When(category=models.Value('nonsc'), then=models.Value(0)),
            models.When(category=models.Value('sc'), then=models.Value(1)),
            models.When(category=models.Value('unres'), then=models.Value(2)),
        )
    )
    Track.objects.using(db_alias).all().update(
        categories_tmp=models.Case(
            models.When(categories=models.Value(''), then=models.Value('')),
            models.When(categories=models.Value('nonsc'), then=models.Value('0')),
            models.When(categories=models.Value('nonsc,sc'), then=models.Value('0,1')),
            models.When(categories=models.Value('nonsc,sc,unres'), then=models.Value('0,1,2')),
            models.When(categories=models.Value('nonsc,unres'), then=models.Value('0,2')),
            models.When(categories=models.Value('sc'), then=models.Value('1')),
            models.When(categories=models.Value('sc,unres'), then=models.Value('1,2')),
            models.When(categories=models.Value('unres'), then=models.Value('2')),
        )
    )


def convert_categories_to_str(apps, schema_editor):
    PlayerStats = apps.get_model('timetrials', 'PlayerStats')
    Score = apps.get_model('timetrials', 'Score')
    Standard = apps.get_model('timetrials', 'Standard')
    Track = apps.get_model('timetrials', 'Track')
    db_alias = schema_editor.connection.alias
    PlayerStats.objects.using(db_alias).all().update(
        category=models.Case(
            models.When(category_tmp=models.Value(0), then=models.Value('nonsc')),
            models.When(category_tmp=models.Value(1), then=models.Value('sc')),
            models.When(category_tmp=models.Value(2), then=models.Value('unres')),
        )
    )
    Score.objects.using(db_alias).all().update(
        category=models.Case(
            models.When(category_tmp=models.Value(0), then=models.Value('nonsc')),
            models.When(category_tmp=models.Value(1), then=models.Value('sc')),
            models.When(category_tmp=models.Value(2), then=models.Value('unres')),
        )
    )
    Standard.objects.using(db_alias).all().update(
        category=models.Case(
            models.When(category_tmp=models.Value(0), then=models.Value('nonsc')),
            models.When(category_tmp=models.Value(1), then=models.Value('sc')),
            models.When(category_tmp=models.Value(2), then=models.Value('unres')),
        )
    )
    Track.objects.using(db_alias).all().update(
        categories=models.Case(
            models.When(categories_tmp=models.Value(''), then=models.Value('')),
            models.When(categories_tmp=models.Value('0'), then=models.Value('nonsc')),
            models.When(categories_tmp=models.Value('0,1'), then=models.Value('nonsc,sc')),
            models.When(categories_tmp=models.Value('0,1,2'), then=models.Value('nonsc,sc,unres')),
            models.When(categories_tmp=models.Value('0,2'), then=models.Value('nonsc,unres')),
            models.When(categories_tmp=models.Value('1'), then=models.Value('sc')),
            models.When(categories_tmp=models.Value('1,2'), then=models.Value('sc,unres')),
            models.When(categories_tmp=models.Value('2'), then=models.Value('unres')),
        )
    )


class Migration(migrations.Migration):

    dependencies = [
        ('timetrials', '0007_score_submission_fields'),
    ]

    operations = [
        migrations.AlterField(
            model_name='playerstats',
            name='category',
            field=models.CharField(choices=[('nonsc', 'Non-Shortcut'), ('sc', 'Shortcut'), ('unres', 'Unrestricted')], default='nonsc'),
        ),
        migrations.AlterField(
            model_name='score',
            name='category',
            field=models.CharField(choices=[('nonsc', 'Non-Shortcut'), ('sc', 'Shortcut'), ('unres', 'Unrestricted')], default='nonsc'),
        ),
        migrations.AlterField(
            model_name='standard',
            name='category',
            field=models.CharField(choices=[('nonsc', 'Non-Shortcut'), ('sc', 'Shortcut'), ('unres', 'Unrestricted')], default='nonsc'),
        ),
        migrations.AddField(
            model_name='playerstats',
            name='category_tmp',
            field=models.IntegerField(choices=[(0, 'Non-Shortcut'), (1, 'Shortcut'), (2, 'Unrestricted')], default=0),
        ),
        migrations.AddField(
            model_name='score',
            name='category_tmp',
            field=models.IntegerField(choices=[(0, 'Non-Shortcut'), (1, 'Shortcut'), (2, 'Unrestricted')], default=0),
        ),
        migrations.AddField(
            model_name='standard',
            name='category_tmp',
            field=models.IntegerField(choices=[(0, 'Non-Shortcut'), (1, 'Shortcut'), (2, 'Unrestricted')], default=0),
        ),
        migrations.AddField(
            model_name='track',
            name='categories_tmp',
            field=multiselectfield.db.fields.MultiSelectField(choices=[(0, 'Non-Shortcut'), (1, 'Shortcut'), (2, 'Unrestricted')], default=0, max_length=5),
        ),
        migrations.RunPython(convert_categories_to_int, convert_categories_to_str),
        migrations.RemoveField(
            model_name='playerstats',
            name='category',
        ),
        migrations.RemoveField(
            model_name='score',
            name='category',
        ),
        migrations.RemoveField(
            model_name='standard',
            name='category',
        ),
        migrations.RemoveField(
            model_name='track',
            name='categories',
        ),
        migrations.RenameField(
            model_name='playerstats',
            old_name='category_tmp',
            new_name='category',
        ),
        migrations.RenameField(
            model_name='score',
            old_name='category_tmp',
            new_name='category',
        ),
        migrations.RenameField(
            model_name='standard',
            old_name='category_tmp',
            new_name='category',
        ),
        migrations.RenameField(
            model_name='track',
            old_name='categories_tmp',
            new_name='categories',
        ),
    ]
